// <auto-generated />
using System;
using HRIS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HRIS.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240205023616_HRISTable")]
    partial class HRISTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HRIS.Core.Entities.ApexMerch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInfini")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMitra")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRAM")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSevilla")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVar")
                        .HasColumnType("bit");

                    b.Property<int>("NoOutlet")
                        .HasColumnType("int");

                    b.Property<string>("RamPercent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SevPercent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("infiniAmount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("varAmount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeDetailsId");

                    b.ToTable("ApexMerches");
                });

            modelBuilder.Entity("HRIS.Core.Entities.Benefit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BenefitAmount")
                        .HasColumnType("float");

                    b.Property<string>("BenefitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateGiven")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeDetailsId");

                    b.ToTable("Benefits");
                });

            modelBuilder.Entity("HRIS.Core.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("HRIS.Core.Entities.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("HRIS.Core.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyNumber")
                        .HasColumnType("int");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("HRIS.Core.Entities.EducationalBg", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Degree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElemDateInc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElemInstitute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElemLoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GradSchool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HsAchievement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HsDateInc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HsInstitute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HsLoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("License")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerAchievement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerDateInc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerInstitute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerLoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("elemAchievement")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EducationalBackground");
                });

            modelBuilder.Entity("HRIS.Core.Entities.EmployeeDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adjustment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAcc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAcc2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseFlag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckDGT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChildAge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChildName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Citizenship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CivilStat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DesigDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EffDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmerPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmerPersonNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EmpDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EvalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherAge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherOccupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEvaluation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExcludeSmanped")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNoPremium")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNoSSS")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNoTax")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPayroll")
                        .HasColumnType("bit");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MajorIllness")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medical")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalPurpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalResult")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherAge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherOccupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfDays")
                        .HasColumnType("int");

                    b.Property<string>("OffIn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OffOut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SalesDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SepDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseAge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseOccupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserLevel")
                        .HasColumnType("int");

                    b.Property<string>("WarehouseNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkDays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("exemption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pagibiNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payper")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("philhealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sssNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tinNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employee_Details");
                });

            modelBuilder.Entity("HRIS.Core.Entities.EmploymentBackground", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Contribution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IncDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatOfBusiness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrevCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrevPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrevSalary")
                        .HasColumnType("float");

                    b.Property<string>("ReasOfLeave")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmploymentBackgrounds");
                });

            modelBuilder.Entity("HRIS.Core.Entities.Leave_Entities.LeaveEntities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Credit")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<int>("LastSubmissionMonth")
                        .HasColumnType("int");

                    b.Property<int>("LastSubmissionYear")
                        .HasColumnType("int");

                    b.Property<DateTime>("LeaveEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LeaveStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResOfCancel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Leaves");
                });

            modelBuilder.Entity("HRIS.Core.Entities.Paymast", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("base15th")
                        .HasColumnType("float");

                    b.Property<double>("baseMonthEnd")
                        .HasColumnType("float");

                    b.Property<double>("baseMonthly")
                        .HasColumnType("float");

                    b.Property<double>("cola15th")
                        .HasColumnType("float");

                    b.Property<double>("colaMonthEnd")
                        .HasColumnType("float");

                    b.Property<double>("colaMonthly")
                        .HasColumnType("float");

                    b.Property<string>("ctcNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("dailyShare")
                        .HasColumnType("float");

                    b.Property<DateTime>("dateIssue")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("depBirthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("depName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("empShare")
                        .HasColumnType("float");

                    b.Property<bool>("excPayrollProcess")
                        .HasColumnType("bit");

                    b.Property<double>("fixTaxRate")
                        .HasColumnType("float");

                    b.Property<double>("medAllowance")
                        .HasColumnType("float");

                    b.Property<string>("payslipPinNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("placeIssue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rateType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeDetailsId");

                    b.ToTable("Paymasts");
                });

            modelBuilder.Entity("HRIS.Core.Entities.Requirement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Clearance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrvLicense")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpCert")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ITR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsClearance")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDrvLicense")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmpCert")
                        .HasColumnType("bit");

                    b.Property<bool>("IsITR")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMarriageCert")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNbi")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPagibig")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhilhealthNo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhyExam")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPolygraph")
                        .HasColumnType("bit");

                    b.Property<bool>("IsResidentCert")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSSSNo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTOR")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTinNo")
                        .HasColumnType("bit");

                    b.Property<string>("MarriageCert")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nbi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PagibigNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhilhealthNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhyExam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidentCert")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("employeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("polygraph")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sssNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeDetailsId");

                    b.ToTable("Requirements");
                });

            modelBuilder.Entity("HRIS.Core.Entities.Salary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("DailyRate")
                        .HasColumnType("float");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("EndMonth")
                        .HasColumnType("float");

                    b.Property<double>("MidMonth")
                        .HasColumnType("float");

                    b.Property<double>("Monthly")
                        .HasColumnType("float");

                    b.Property<double>("OTRate")
                        .HasColumnType("float");

                    b.Property<string>("PayType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("fixrate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("HRIS.Core.Entities.UserEntities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("HRIS.Core.Entities.ApexMerch", b =>
                {
                    b.HasOne("HRIS.Core.Entities.EmployeeDetails", "EmployeeDetails")
                        .WithMany()
                        .HasForeignKey("EmployeeDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeDetails");
                });

            modelBuilder.Entity("HRIS.Core.Entities.Benefit", b =>
                {
                    b.HasOne("HRIS.Core.Entities.EmployeeDetails", "EmployeeDetails")
                        .WithMany()
                        .HasForeignKey("EmployeeDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeDetails");
                });

            modelBuilder.Entity("HRIS.Core.Entities.Branch", b =>
                {
                    b.HasOne("HRIS.Core.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("HRIS.Core.Entities.EducationalBg", b =>
                {
                    b.HasOne("HRIS.Core.Entities.EmployeeDetails", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HRIS.Core.Entities.EmployeeDetails", b =>
                {
                    b.HasOne("HRIS.Core.Entities.Company", "company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");
                });

            modelBuilder.Entity("HRIS.Core.Entities.EmploymentBackground", b =>
                {
                    b.HasOne("HRIS.Core.Entities.EmployeeDetails", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HRIS.Core.Entities.Leave_Entities.LeaveEntities", b =>
                {
                    b.HasOne("HRIS.Core.Entities.UserEntities.User", "users")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("HRIS.Core.Entities.Paymast", b =>
                {
                    b.HasOne("HRIS.Core.Entities.EmployeeDetails", "EmployeeDetails")
                        .WithMany()
                        .HasForeignKey("EmployeeDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeDetails");
                });

            modelBuilder.Entity("HRIS.Core.Entities.Requirement", b =>
                {
                    b.HasOne("HRIS.Core.Entities.EmployeeDetails", "EmployeeDetails")
                        .WithMany()
                        .HasForeignKey("EmployeeDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeDetails");
                });

            modelBuilder.Entity("HRIS.Core.Entities.Salary", b =>
                {
                    b.HasOne("HRIS.Core.Entities.EmployeeDetails", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HRIS.Core.Entities.UserEntities.User", b =>
                {
                    b.HasOne("HRIS.Core.Entities.EmployeeDetails", "employeeDetails")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employeeDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
